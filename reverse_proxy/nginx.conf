worker_processes auto;
events {
  worker_connections 1024;
}

http {
    # gzip on;
    # gzip_vary on;
    # gzip_min_length 1000;
    # gzip_proxied any;
    # gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
    # gzip_disable "MSIE [1-6]\.";
    # sendfile on;
    # include /etc/nginx/mime.types;
    # default_type application/octet-stream;

    server {
        listen 80;
        server_name 192.168.3.135;
        # Modify the location header to include the port

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    
        # Reverse proxy configuration for each service
        location /jackett/ {
            # rewrite ^/jackett(.*)$ /1 break;
            proxy_pass http://192.168.3.135:9117/UI/Dashboard;
            proxy_set_header Host $host:$proxy_port;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
 
        }

        location /qbittorrent/ {
            proxy_pass http://qbittorrent:8080/;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
            proxy_set_header Host $host:$proxy_port;
            
        }

        location /plex/ {
            proxy_pass http://192.168.3.135:32400/web/index.html;
            # proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
            #Plex has A LOT of javascript, xml and html. This helps a lot, but if it causes playback issues with devices turn it off. (Haven't encountered any yet)
            gzip on;
            gzip_vary on;
            gzip_min_length 1000;
            gzip_proxied any;
            gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
            gzip_disable "MSIE [1-6]\.";

            #Nginx default client_max_body_size is 1MB, which breaks Camera Upload feature from the phones.
            #Increasing the limit fixes the issue. Anyhow, if 4K videos are expected to be uploaded, the size might need to be increased even more
            client_max_body_size 100M;

            #Forward real ip and host to Plex
            proxy_set_header Host $host:$proxy_port;
            proxy_set_header X-Real-IP $remote_addr;
            #When using ngx_http_realip_module change $proxy_add_x_forwarded_for to '$http_x_forwarded_for,$realip_remote_addr'
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

            #Websockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

                #Disables compression between Plex and Nginx, required if using sub_filter below.
            #May also improve loading time by a very marginal amount, as nginx will compress anyway.
                #proxy_set_header Accept-Encoding "";

            #Buffering off send to the client as soon as the data is received from Plex.
            proxy_redirect off;
            proxy_buffering off;
        }

        # location /owncloud/ {
        #     proxy_pass http://owncloud_server:8080/;
        # }

        location /retroarch/ {
            proxy_pass http://retroarch/;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
        }

        location /cadvisor/ {
            proxy_pass http://cadvisor:8080/;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
        }

        # Add more reverse proxy configurations for other services

        location /dashboard {
            # Default proxy configuration
            proxy_pass http://192.168.3.135:5005/;
            proxy_set_header Host $host:5005;
            proxy_redirect ~^(http://[^:]+):/d+/(.*)$ $1:$proxy_port/$2;
        }
        location ~* \.(js|css|php)*$ {
            proxy_pass http://192.168.3.135:$proxy_port$request_uri;
            proxy_set_header Host $host:$proxy_port;

        }
    }

    # Uncomment the following block if using SSL (HTTPS)
    # server {
    #     listen 443 ssl;
    #     server_name example.com;
    #
    #     ssl_certificate /etc/nginx/ssl.crt;
    #     ssl_certificate_key /etc/nginx/ssl.key;
    #
    #     location / {
    #         proxy_pass http://$host$request_uri;
    #     }
    # }
}
